service: poet-bot

package:
  exclude:
    - "**"
  include:
    - node_modules/**
    - src/**

provider:
  name: aws
  region: ap-southeast-2
  stage: dev
  runtime: nodejs4.3
  environment:
    CLIENT_ID: ${file(local.yml):${opt:stage, self:provider.stage}.slack.clientId}
    CLIENT_SECRET: ${file(local.yml):${opt:stage, self:provider.stage}.slack.clientSecret}
    LUIS_URL: ${file(local.yml):${opt:stage, self:provider.stage}.luis.url}
    LUIS_APPID: ${file(local.yml):${opt:stage, self:provider.stage}.luis.appID}
    LUIS_SUBSCRIPTION_KEY: ${file(local.yml):${opt:stage, self:provider.stage}.luis.subscriptionKey}
    LUIS_TIMEZONE_OFFSET: ${file(local.yml):${opt:stage, self:provider.stage}.luis.timeZoneOffset}
    ACCESS_TOKEN_TABLE_NAME: ${self:resources.Resources.accessTokenTable.Properties.TableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:*

functions:
  install:
    handler: src/handler.install
    events:
      - http: GET install
  authorized:
    handler: src/handler.authorized
    events:
      - http: GET authorized
  event:
    handler: src/handler.event
    events:
      - http: POST event

resources:
  Resources:
    accessTokenTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${opt:stage, self:provider.stage}-accessTokenTable
        AttributeDefinitions:
          - AttributeName: teamId
            AttributeType: S
        KeySchema:
          - AttributeName: teamId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-offline